name: CI Pipeline

on:
  push:
    branches:
      - main   # Trigger on push to the 'main' branch
  pull_request:
    branches:
      - main   # Trigger on pull requests to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      # Lint the code (using pylint for Python)
      - name: Lint with Pylint
        run: |
          pylint main.py  # or your file path

      # Run tests using pytest (or unittest)
      - name: Run tests
        run: |
          pytest tests/test.py --maxfail=1 --disable-warnings -q  # Fail fast on the first error

  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: build  # This ensures that Docker build only happens after the tests pass
    steps:
      # Checkout the code again for Docker build
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t saic3076@gmail.com/yourimage:latest .

      # Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push saic3076@gmail.com/yourimage:latest
